var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","dashboard","dashboardwidget","dashboardwidgetscontroller","dashboardscontroller","dashboardshelper","extensions","jirabase","instancemethods","passworded","instancemethods","prettyparam","instancemethods","widgetbase","instancemethods","gangliagraph","gangliagraphscontroller","gangliagraphshelper","githubcommit","githubcommitscontroller","githubcommitshelper","hudsonbuildstatus","hudsonbuildstatusescontroller","hudsonbuildstatuseshelper","jiracountdown","jiracountdownscontroller","jiracountdownshelper","jiraissuesummariescontroller","jiraissuesummarieshelper","jiraissuesummary","remotedatahelper","sonarreport","sonarreportscontroller","sonarreportshelper","verticalspacer","verticalspacerscontroller","verticalspacershelper","widget","widgetscontroller","widgetshelper","api_data()","api_uri()","codebase_uri()","columns()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","data()","days_remaining()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","displayable_dashboards()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","embed()","feed_uri()","full_project_name()","hash_password()","html_class()","html_id()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","issue_counts()","issue_types()","login()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_release()","page_title()","parse_statuses()","password_validation_required?()","prepare_slug()","recent_commits()","remote()","remote_json()","remote_xml()","remove_widget()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","true_version()","true_widget()","true_widget_listing_path()","true_widget_path()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_widget()","valid_password?()","widget_type()","widgets_for_dashboard()","readme_for_app"],"longSearchIndex":["applicationcontroller","applicationhelper","dashboard","dashboardwidget","dashboardwidgetscontroller","dashboardscontroller","dashboardshelper","extensions","extensions::jirabase","extensions::jirabase::instancemethods","extensions::passworded","extensions::passworded::instancemethods","extensions::prettyparam","extensions::prettyparam::instancemethods","extensions::widgetbase","extensions::widgetbase::instancemethods","gangliagraph","gangliagraphscontroller","gangliagraphshelper","githubcommit","githubcommitscontroller","githubcommitshelper","hudsonbuildstatus","hudsonbuildstatusescontroller","hudsonbuildstatuseshelper","jiracountdown","jiracountdownscontroller","jiracountdownshelper","jiraissuesummariescontroller","jiraissuesummarieshelper","jiraissuesummary","remotedatahelper","sonarreport","sonarreportscontroller","sonarreportshelper","verticalspacer","verticalspacerscontroller","verticalspacershelper","widget","widgetscontroller","widgetshelper","hudsonbuildstatuseshelper#api_data()","hudsonbuildstatus#api_uri()","githubcommit#codebase_uri()","dashboard#columns()","dashboardwidgetscontroller#create()","dashboardscontroller#create()","gangliagraphscontroller#create()","githubcommitscontroller#create()","hudsonbuildstatusescontroller#create()","jiracountdownscontroller#create()","jiraissuesummariescontroller#create()","sonarreportscontroller#create()","verticalspacerscontroller#create()","widgetscontroller#create()","gangliagraphscontroller#data()","jiracountdown#days_remaining()","dashboardwidgetscontroller#destroy()","dashboardscontroller#destroy()","gangliagraphscontroller#destroy()","githubcommitscontroller#destroy()","hudsonbuildstatusescontroller#destroy()","jiracountdownscontroller#destroy()","jiraissuesummariescontroller#destroy()","sonarreportscontroller#destroy()","verticalspacerscontroller#destroy()","widgetscontroller#destroy()","dashboard::displayable_dashboards()","dashboardwidgetscontroller#edit()","dashboardscontroller#edit()","gangliagraphscontroller#edit()","githubcommitscontroller#edit()","hudsonbuildstatusescontroller#edit()","jiracountdownscontroller#edit()","jiraissuesummariescontroller#edit()","sonarreportscontroller#edit()","verticalspacerscontroller#edit()","widgetscontroller#edit()","widgetscontroller#embed()","githubcommit#feed_uri()","extensions::jirabase::instancemethods#full_project_name()","extensions::passworded::instancemethods#hash_password()","extensions::widgetbase::instancemethods#html_class()","extensions::widgetbase::instancemethods#html_id()","applicationcontroller#index()","dashboardwidgetscontroller#index()","dashboardscontroller#index()","gangliagraphscontroller#index()","githubcommitscontroller#index()","hudsonbuildstatusescontroller#index()","jiracountdownscontroller#index()","jiraissuesummariescontroller#index()","sonarreportscontroller#index()","verticalspacerscontroller#index()","widgetscontroller#index()","jiraissuesummary#issue_counts()","jiraissuesummary#issue_types()","extensions::jirabase::instancemethods#login()","dashboardwidgetscontroller#new()","dashboardscontroller#new()","gangliagraphscontroller#new()","githubcommitscontroller#new()","hudsonbuildstatusescontroller#new()","jiracountdownscontroller#new()","jiraissuesummariescontroller#new()","sonarreportscontroller#new()","verticalspacerscontroller#new()","widgetscontroller#new()","extensions::jirabase::instancemethods#next_release()","applicationhelper#page_title()","jiraissuesummary::parse_statuses()","extensions::passworded::instancemethods#password_validation_required?()","extensions::prettyparam::instancemethods#prepare_slug()","githubcommit#recent_commits()","remotedatahelper#remote()","remotedatahelper#remote_json()","remotedatahelper#remote_xml()","extensions::widgetbase::instancemethods#remove_widget()","dashboardwidgetscontroller#show()","dashboardscontroller#show()","gangliagraphscontroller#show()","githubcommitscontroller#show()","hudsonbuildstatusescontroller#show()","jiracountdownscontroller#show()","jiraissuesummariescontroller#show()","sonarreportscontroller#show()","verticalspacerscontroller#show()","widgetscontroller#show()","extensions::jirabase::instancemethods#true_version()","widgetshelper#true_widget()","widgetshelper#true_widget_listing_path()","widgetshelper#true_widget_path()","dashboardwidgetscontroller#update()","dashboardscontroller#update()","gangliagraphscontroller#update()","githubcommitscontroller#update()","hudsonbuildstatusescontroller#update()","jiracountdownscontroller#update()","jiraissuesummariescontroller#update()","sonarreportscontroller#update()","verticalspacerscontroller#update()","widgetscontroller#update()","extensions::widgetbase::instancemethods#update_widget()","extensions::passworded::instancemethods#valid_password?()","widgetshelper#widget_type()","widgetshelper#widgets_for_dashboard()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","","<p>Helper methods associated with no specific module.\n"],["Dashboard","","Dashboard.html","","<p>Model that represents a Dashboard that the user can view. A Dashboard can\nhave many Widgets on it. The …\n"],["DashboardWidget","","DashboardWidget.html","","<p>Model to join Dashboards and Widgets with one another. Each DashboardWidget\nobject contains the ID of …\n"],["DashboardWidgetsController","","DashboardWidgetsController.html","",""],["DashboardsController","","DashboardsController.html","",""],["DashboardsHelper","","DashboardsHelper.html","","<p>Helper methods associated with Dashboards.\n"],["Extensions","","Extensions.html","",""],["Extensions::JiraBase","","Extensions/JiraBase.html","","<p>Module to be included by every model that will interact with JIRA.\n<p>Properties\n<p><code>jira_server</code> (Text): Address ...\n"],["Extensions::JiraBase::InstanceMethods","","Extensions/JiraBase/InstanceMethods.html","","<p>Methods used to pull additional data from JIRA.\n"],["Extensions::Passworded","","Extensions/Passworded.html","","<p>Module to be included by every model that will have a username and\npassword. Passwords are hashed with …\n"],["Extensions::Passworded::InstanceMethods","","Extensions/Passworded/InstanceMethods.html","","<p>Methods used for password hashing and confirmation\n"],["Extensions::PrettyParam","","Extensions/PrettyParam.html","","<p>Module to add a slug to a model in order to produce friendlier URIs.\nRequires a <code>name</code> property in the …\n"],["Extensions::PrettyParam::InstanceMethods","","Extensions/PrettyParam/InstanceMethods.html","",""],["Extensions::WidgetBase","","Extensions/WidgetBase.html","","<p>Module to be included by every model that will be used as a Widget.\n<p>Includes DataMapper::Resource and …\n"],["Extensions::WidgetBase::InstanceMethods","","Extensions/WidgetBase/InstanceMethods.html","","<p>Methods called by DataMapper’s lifecycle hooks.\n"],["GangliaGraph","","GangliaGraph.html","","<p>Model for Ganglia system monitor graphs.\n<p>Based on Extensions::WidgetBase, which gives it a <code>name</code>\nproperty, …\n"],["GangliaGraphsController","","GangliaGraphsController.html","",""],["GangliaGraphsHelper","","GangliaGraphsHelper.html","","<p>Helper methods associated with GangliaGraphs.\n"],["GithubCommit","","GithubCommit.html","","<p>Model for retrieving the latest commits from GitHub, either from a user’s\nwatchlist or from a specific …\n"],["GithubCommitsController","","GithubCommitsController.html","",""],["GithubCommitsHelper","","GithubCommitsHelper.html","","<p>Helper methods associated with GithubCommits.\n"],["HudsonBuildStatus","","HudsonBuildStatus.html","","<p>Model for tracking the statuses of Hudson build jobs.\n<p>Based on Extensions::WidgetBase, which gives it …\n"],["HudsonBuildStatusesController","","HudsonBuildStatusesController.html","",""],["HudsonBuildStatusesHelper","","HudsonBuildStatusesHelper.html","","<p>Helper methods associated with HudsonBuildStatuses.\n"],["JiraCountdown","","JiraCountdown.html","","<p>Model for tracking the number of days left until the release of the next\nJIRA project version.\n<p>Based on …\n"],["JiraCountdownsController","","JiraCountdownsController.html","",""],["JiraCountdownsHelper","","JiraCountdownsHelper.html","","<p>Helper methods associated with JiraCountdowns.\n"],["JiraIssueSummariesController","","JiraIssueSummariesController.html","",""],["JiraIssueSummariesHelper","","JiraIssueSummariesHelper.html","","<p>Helper methods associated with JiraIssueSummaries.\n"],["JiraIssueSummary","","JiraIssueSummary.html","","<p>Model for tracking the number of issues in a JIRA instance. Retrieves\ninformation both about the status …\n"],["RemoteDataHelper","","RemoteDataHelper.html","","<p>Helper methods for retrieving data from remote sources.\n"],["SonarReport","","SonarReport.html","","<p>Model for Sonar source code reports.\n<p>Based on Extensions::WidgetBase, which gives it a <code>name</code>\nproperty, …\n"],["SonarReportsController","","SonarReportsController.html","",""],["SonarReportsHelper","","SonarReportsHelper.html","","<p>Helper methods associated with SonarReports.\n"],["VerticalSpacer","","VerticalSpacer.html","","<p>Model for a purely cosmetic vertical spacer to use on a Dashboard.\n<p>Based on Extensions::WidgetBase, which …\n"],["VerticalSpacersController","","VerticalSpacersController.html","",""],["VerticalSpacersHelper","","VerticalSpacersHelper.html","",""],["Widget","","Widget.html","","<p>Model for objects that can be displayed as Widgets on a Dashboard. There\nare many kinds of widgets, each …\n"],["WidgetsController","","WidgetsController.html","",""],["WidgetsHelper","","WidgetsHelper.html","",""],["api_data","HudsonBuildStatusesHelper","HudsonBuildStatusesHelper.html#method-i-api_data","(hudson_build_status)","<p>Fetches job data from the remote Hudson API and filters it down according\nto the <code>build</code> field.\n"],["api_uri","HudsonBuildStatus","HudsonBuildStatus.html#method-i-api_uri","()","<p>URI of the remote API call used by HudsonBuildStatus. Takes the value of\n<code>hudson_server</code> and appends “ …\n"],["codebase_uri","GithubCommit","GithubCommit.html#method-i-codebase_uri","()","<p>URI of the GitHub page that holds this branch’s code, or if\n<code>track_user_watchlist</code> is <code>true</code>, the user’s …\n"],["columns","Dashboard","Dashboard.html#method-i-columns","()","<p>Return the number of columns this dashboard should have based on the\nmaximum values of <code>column_id</code> for …\n"],["create","DashboardWidgetsController","DashboardWidgetsController.html#method-i-create","()","<p>POST /dashboard_widgets POST /dashboard_widgets.xml\n"],["create","DashboardsController","DashboardsController.html#method-i-create","()","<p>POST /dashboards POST /dashboards.xml\n"],["create","GangliaGraphsController","GangliaGraphsController.html#method-i-create","()","<p>POST /ganglia-graphs POST /ganglia-graphs.xml\n"],["create","GithubCommitsController","GithubCommitsController.html#method-i-create","()","<p>POST /github_commits POST /github_commits.xml\n"],["create","HudsonBuildStatusesController","HudsonBuildStatusesController.html#method-i-create","()","<p>POST /hudson_build_statuses POST /hudson_build_statuses.xml\n"],["create","JiraCountdownsController","JiraCountdownsController.html#method-i-create","()","<p>POST /jira_countdowns POST /jira_countdowns.xml\n"],["create","JiraIssueSummariesController","JiraIssueSummariesController.html#method-i-create","()","<p>POST /jira_issue_summaries POST /jira_issue_summaries.xml\n"],["create","SonarReportsController","SonarReportsController.html#method-i-create","()","<p>POST /sonar_reports POST /sonar_reports.xml\n"],["create","VerticalSpacersController","VerticalSpacersController.html#method-i-create","()","<p>POST /vertical_spacers POST /vertical_spacers.xml\n"],["create","WidgetsController","WidgetsController.html#method-i-create","()","<p>POST /widgets POST /widgets.xml\n"],["data","GangliaGraphsController","GangliaGraphsController.html#method-i-data","()","<p>GET /ganglia-graphs/1/data.json\n"],["days_remaining","JiraCountdown","JiraCountdown.html#method-i-days_remaining","()","<p>Calculates the number of days between the next release date and the current\ndate.\n"],["destroy","DashboardWidgetsController","DashboardWidgetsController.html#method-i-destroy","()","<p>DELETE /dashboard_widgets/1 DELETE /dashboard_widgets/1.xml\n"],["destroy","DashboardsController","DashboardsController.html#method-i-destroy","()","<p>DELETE /dashboards/1 DELETE /dashboards/1.xml\n"],["destroy","GangliaGraphsController","GangliaGraphsController.html#method-i-destroy","()","<p>DELETE /ganglia-graphs/1 DELETE /ganglia-graphs/1.xml\n"],["destroy","GithubCommitsController","GithubCommitsController.html#method-i-destroy","()","<p>DELETE /github_commits/1 DELETE /github_commits/1.xml\n"],["destroy","HudsonBuildStatusesController","HudsonBuildStatusesController.html#method-i-destroy","()","<p>DELETE /hudson_build_statuses/1 DELETE /hudson_build_statuses/1.xml\n"],["destroy","JiraCountdownsController","JiraCountdownsController.html#method-i-destroy","()","<p>DELETE /jira_countdowns/1 DELETE /jira_countdowns/1.xml\n"],["destroy","JiraIssueSummariesController","JiraIssueSummariesController.html#method-i-destroy","()","<p>DELETE /jira_issue_summaries/1 DELETE /jira_issue_summaries/1.xml\n"],["destroy","SonarReportsController","SonarReportsController.html#method-i-destroy","()","<p>DELETE /sonar_reports/1 DELETE /sonar_reports/1.xml\n"],["destroy","VerticalSpacersController","VerticalSpacersController.html#method-i-destroy","()","<p>DELETE /vertical_spacers/1 DELETE /vertical_spacers/1.xml\n"],["destroy","WidgetsController","WidgetsController.html#method-i-destroy","()","<p>DELETE /widgets/1 DELETE /widgets/1.xml\n"],["displayable_dashboards","Dashboard","Dashboard.html#method-c-displayable_dashboards","()","<p>Return a collection of Dashboards, useful for generating a navbar.\n<p>Currently just returns all Dashboards …\n"],["edit","DashboardWidgetsController","DashboardWidgetsController.html#method-i-edit","()","<p>GET /dashboard_widgets/1/edit\n"],["edit","DashboardsController","DashboardsController.html#method-i-edit","()","<p>GET /dashboards/1/edit\n"],["edit","GangliaGraphsController","GangliaGraphsController.html#method-i-edit","()","<p>GET /ganglia-graphs/1/edit\n"],["edit","GithubCommitsController","GithubCommitsController.html#method-i-edit","()","<p>GET /github_commits/1/edit\n"],["edit","HudsonBuildStatusesController","HudsonBuildStatusesController.html#method-i-edit","()","<p>GET /hudson_build_statuses/1/edit\n"],["edit","JiraCountdownsController","JiraCountdownsController.html#method-i-edit","()","<p>GET /jira_countdowns/1/edit\n"],["edit","JiraIssueSummariesController","JiraIssueSummariesController.html#method-i-edit","()","<p>GET /jira_issue_summaries/1/edit\n"],["edit","SonarReportsController","SonarReportsController.html#method-i-edit","()","<p>GET /sonar_reports/1/edit\n"],["edit","VerticalSpacersController","VerticalSpacersController.html#method-i-edit","()","<p>GET /vertical_spacers/1/edit\n"],["edit","WidgetsController","WidgetsController.html#method-i-edit","()","<p>GET /widgets/1/edit\n"],["embed","WidgetsController","WidgetsController.html#method-i-embed","()","<p>GET /widgets/1/embed\n"],["feed_uri","GithubCommit","GithubCommit.html#method-i-feed_uri","()","<p>URI of the Atom feed used by GithubCommit. Combines the values of all of\nother properties appropriately. …\n"],["full_project_name","Extensions::JiraBase::InstanceMethods","Extensions/JiraBase/InstanceMethods.html#method-i-full_project_name","()","<p>The full name of a project specified by its abbreviated name. Connects to\nJIRA.\n"],["hash_password","Extensions::Passworded::InstanceMethods","Extensions/Passworded/InstanceMethods.html#method-i-hash_password","()","<p>Set <code>password</code> to a hashed version of the password given by\nentry form if the password field is not blank. …\n"],["html_class","Extensions::WidgetBase::InstanceMethods","Extensions/WidgetBase/InstanceMethods.html#method-i-html_class","()","<p>A parameterized version of the Widget’s class name.\n"],["html_id","Extensions::WidgetBase::InstanceMethods","Extensions/WidgetBase/InstanceMethods.html#method-i-html_id","()","<p>A parameterized version of <code>name</code>, combined with the Widget’s\nclass name.\n"],["index","ApplicationController","ApplicationController.html#method-i-index","()","<p>GET /\n"],["index","DashboardWidgetsController","DashboardWidgetsController.html#method-i-index","()","<p>GET /dashboard_widgets GET /dashboard_widgets.xml\n"],["index","DashboardsController","DashboardsController.html#method-i-index","()","<p>GET /dashboards GET /dashboards.xml\n"],["index","GangliaGraphsController","GangliaGraphsController.html#method-i-index","()","<p>GET /ganglia-graphs GET /ganglia-graphs.xml\n"],["index","GithubCommitsController","GithubCommitsController.html#method-i-index","()","<p>GET /github_commits GET /github_commits.xml\n"],["index","HudsonBuildStatusesController","HudsonBuildStatusesController.html#method-i-index","()","<p>GET /hudson_build_statuses GET /hudson_build_statuses.xml\n"],["index","JiraCountdownsController","JiraCountdownsController.html#method-i-index","()","<p>GET /jira_countdowns GET /jira_countdowns.xml\n"],["index","JiraIssueSummariesController","JiraIssueSummariesController.html#method-i-index","()","<p>GET /jira_issue_summaries GET /jira_issue_summaries.xml\n"],["index","SonarReportsController","SonarReportsController.html#method-i-index","()","<p>GET /sonar_reports GET /sonar_reports.xml\n"],["index","VerticalSpacersController","VerticalSpacersController.html#method-i-index","()","<p>GET /vertical_spacers GET /vertical_spacers.xml\n"],["index","WidgetsController","WidgetsController.html#method-i-index","()","<p>GET /widgets GET /widgets.xml\n"],["issue_counts","JiraIssueSummary","JiraIssueSummary.html#method-i-issue_counts","()","<p>Runs JQL queries against a JIRA instance to retrieve the number of closed,\nin progress, and open issues …\n"],["issue_types","JiraIssueSummary","JiraIssueSummary.html#method-i-issue_types","()","<p>Runs JQL queries against a JIRA instance to retrieve the number of bugs,\nfeatures, and tasks for a given …\n"],["login","Extensions::JiraBase::InstanceMethods","Extensions/JiraBase/InstanceMethods.html#method-i-login","()","<p>Log into JIRA if necessary.\n"],["new","DashboardWidgetsController","DashboardWidgetsController.html#method-i-new","()","<p>GET /dashboard_widgets/new GET /dashboard_widgets/new.xml\n"],["new","DashboardsController","DashboardsController.html#method-i-new","()","<p>GET /dashboards/new GET /dashboards/new.xml\n"],["new","GangliaGraphsController","GangliaGraphsController.html#method-i-new","()","<p>GET /ganglia-graphs/new GET /ganglia-graphs/new.xml\n"],["new","GithubCommitsController","GithubCommitsController.html#method-i-new","()","<p>GET /github_commits/new GET /github_commits/new.xml\n"],["new","HudsonBuildStatusesController","HudsonBuildStatusesController.html#method-i-new","()","<p>GET /hudson_build_statuses/new GET /hudson_build_statuses/new.xml\n"],["new","JiraCountdownsController","JiraCountdownsController.html#method-i-new","()","<p>GET /jira_countdowns/new GET /jira_countdowns/new.xml\n"],["new","JiraIssueSummariesController","JiraIssueSummariesController.html#method-i-new","()","<p>GET /jira_issue_summaries/new GET /jira_issue_summaries/new.xml\n"],["new","SonarReportsController","SonarReportsController.html#method-i-new","()","<p>GET /sonar_reports/new GET /sonar_reports/new.xml\n"],["new","VerticalSpacersController","VerticalSpacersController.html#method-i-new","()","<p>GET /vertical_spacers/new GET /vertical_spacers/new.xml\n"],["new","WidgetsController","WidgetsController.html#method-i-new","()","<p>GET /widgets/new GET /widgets/new.xml\n"],["next_release","Extensions::JiraBase::InstanceMethods","Extensions/JiraBase/InstanceMethods.html#method-i-next_release","()","<p>Determines the next upcoming version associated with a JIRA project.\nReturns a Hash containing <code>name</code> and …\n"],["page_title","ApplicationHelper","ApplicationHelper.html#method-i-page_title","()","<p>Generate a context-appropriate title for a page.\n<p>Default title is “Nifty Monitoring Dashboard”. …\n"],["parse_statuses","JiraIssueSummary","JiraIssueSummary.html#method-c-parse_statuses","(status_list)","<p>Normalizes a comma-separated list so that each item in the list is wrapped\nin quotation marks.\n"],["password_validation_required?","Extensions::Passworded::InstanceMethods","Extensions/Passworded/InstanceMethods.html#method-i-password_validation_required-3F","()","<p>Check if the entry form requires password field. Password validation is\nonly required if this is a new …\n"],["prepare_slug","Extensions::PrettyParam::InstanceMethods","Extensions/PrettyParam/InstanceMethods.html#method-i-prepare_slug","()","\n<pre>Override +to_param+ to also include an object's name in the URL.\n\nCurrently disabled (and broken!) due ...</pre>\n"],["recent_commits","GithubCommit","GithubCommit.html#method-i-recent_commits","()","<p>An array of recent commits, limited by <code>commits_to_show</code>. Each\ncommit is stored as a hash with <code>id</code>, <code>description</code> …\n"],["remote","RemoteDataHelper","RemoteDataHelper.html#method-i-remote","(content_type, url, limit = 10)","<p>Fetch data from a remote source using the specified content type, following\nredirects if needed. Supports …\n"],["remote_json","RemoteDataHelper","RemoteDataHelper.html#method-i-remote_json","(url, limit = 10)","<p>Fetch JSON from a remote source. Wrapper around remote().\n<p>Handy for certain applications that serve JSON …\n"],["remote_xml","RemoteDataHelper","RemoteDataHelper.html#method-i-remote_xml","(url, limit = 10)","<p>Fetch XML from a remote source. Wrapper around remote().\n"],["remove_widget","Extensions::WidgetBase::InstanceMethods","Extensions/WidgetBase/InstanceMethods.html#method-i-remove_widget","()","<p>Removes the appropriate entry for this item from the Widget listing, and\nany references to it in DashboardWidget …\n"],["show","DashboardWidgetsController","DashboardWidgetsController.html#method-i-show","()","<p>GET /dashboard_widgets/1 GET /dashboard_widgets/1.xml\n"],["show","DashboardsController","DashboardsController.html#method-i-show","()","<p>GET /dashboards/1 GET /dashboards/1.xml\n"],["show","GangliaGraphsController","GangliaGraphsController.html#method-i-show","()","<p>GET /ganglia-graphs/1 GET /ganglia-graphs/1.xml\n"],["show","GithubCommitsController","GithubCommitsController.html#method-i-show","()","<p>GET /github_commits/1 GET /github_commits/1.xml\n"],["show","HudsonBuildStatusesController","HudsonBuildStatusesController.html#method-i-show","()","<p>GET /hudson_build_statuses/1 GET /hudson_build_statuses/1.xml\n"],["show","JiraCountdownsController","JiraCountdownsController.html#method-i-show","()","<p>GET /jira_countdowns/1 GET /jira_countdowns/1.xml\n"],["show","JiraIssueSummariesController","JiraIssueSummariesController.html#method-i-show","()","<p>GET /jira_issue_summaries/1 GET /jira_issue_summaries/1.xml\n"],["show","SonarReportsController","SonarReportsController.html#method-i-show","()","<p>GET /sonar_reports/1 GET /sonar_reports/1.xml\n"],["show","VerticalSpacersController","VerticalSpacersController.html#method-i-show","()","<p>GET /vertical_spacers/1 GET /vertical_spacers/1.xml\n"],["show","WidgetsController","WidgetsController.html#method-i-show","()","<p>GET /widgets/1 GET /widgets/1.xml\n"],["true_version","Extensions::JiraBase::InstanceMethods","Extensions/JiraBase/InstanceMethods.html#method-i-true_version","()","<p>The name of the next version of a JIRA project. If <code>version</code> is\nnot “<code>current</code>”, this will just …\n"],["true_widget","WidgetsHelper","WidgetsHelper.html#method-i-true_widget","(widget)","<p>Get the actual widget from its appropriate model.\n"],["true_widget_listing_path","WidgetsHelper","WidgetsHelper.html#method-i-true_widget_listing_path","(widget)","<p>Return a path to a listing of the given widget’s type.\n"],["true_widget_path","WidgetsHelper","WidgetsHelper.html#method-i-true_widget_path","(widget, args=nil)","<p>Returns a path to the given widget.\n<p>Additional arguments will be passed to the <code>polymorphic_path</code>\nhelper …\n"],["update","DashboardWidgetsController","DashboardWidgetsController.html#method-i-update","()","<p>PUT /dashboard_widgets/1 PUT /dashboard_widgets/1.xml\n"],["update","DashboardsController","DashboardsController.html#method-i-update","()","<p>PUT /dashboards/1 PUT /dashboards/1.xml\n"],["update","GangliaGraphsController","GangliaGraphsController.html#method-i-update","()","<p>PUT /ganglia-graphs/1 PUT /ganglia-graphs/1.xml\n"],["update","GithubCommitsController","GithubCommitsController.html#method-i-update","()","<p>PUT /github_commits/1 PUT /github_commits/1.xml\n"],["update","HudsonBuildStatusesController","HudsonBuildStatusesController.html#method-i-update","()","<p>PUT /hudson_build_statuses/1 PUT /hudson_build_statuses/1.xml\n"],["update","JiraCountdownsController","JiraCountdownsController.html#method-i-update","()","<p>PUT /jira_countdowns/1 PUT /jira_countdowns/1.xml\n"],["update","JiraIssueSummariesController","JiraIssueSummariesController.html#method-i-update","()","<p>PUT /jira_issue_summaries/1 PUT /jira_issue_summaries/1.xml\n"],["update","SonarReportsController","SonarReportsController.html#method-i-update","()","<p>PUT /sonar_reports/1 PUT /sonar_reports/1.xml\n"],["update","VerticalSpacersController","VerticalSpacersController.html#method-i-update","()","<p>PUT /vertical_spacers/1 PUT /vertical_spacers/1.xml\n"],["update","WidgetsController","WidgetsController.html#method-i-update","()","<p>PUT /widgets/1 PUT /widgets/1.xml\n"],["update_widget","Extensions::WidgetBase::InstanceMethods","Extensions/WidgetBase/InstanceMethods.html#method-i-update_widget","()","<p>Updates the Widget listing with an entry for this item.\n<p>Called after saving the object.\n"],["valid_password?","Extensions::Passworded::InstanceMethods","Extensions/Passworded/InstanceMethods.html#method-i-valid_password-3F","(password_plaintext)","<p>Hash given password and check it against the hash stored in the database.\n"],["widget_type","WidgetsHelper","WidgetsHelper.html#method-i-widget_type","(widget)","<p>Determine what type of widget the given Widget is.\n<p>Returned value is a constant, so the following is possible: …\n"],["widgets_for_dashboard","WidgetsHelper","WidgetsHelper.html#method-i-widgets_for_dashboard","(dashboard)","<p>Gather an array of Widgets that belong to a given Dashboard. Each item in\nthe array is a hash containing …\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}